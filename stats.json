{"leetcode":{"easy":0,"hard":1,"medium":1,"shas":{"1093-recover-a-tree-from-preorder-traversal":{"1093-recover-a-tree-from-preorder-traversal.cpp":"3f17842cc4f9726ec5a01dc5a7e930c4c0ba1e79","README.md":"b70ae544747eef7effda85e53eeef3f8a9d5e9b1","difficulty":"hard"},"1387-find-elements-in-a-contaminated-binary-tree":{"1387-find-elements-in-a-contaminated-binary-tree.cpp":"1384b2bc3a931c739d25570806479bb92ad2b0f4","README.md":"7980583be6ecef53867f4c3e06018b1486896daa"},"2107-find-unique-binary-string":{"2107-find-unique-binary-string.cpp":"1032f48118a30994dba28304fd322f9f2e388a5b","README.md":"b0b6e304f8d6bd3ff908e232d68c40f89ee7c9cd"},"README.md":{"":"39e6094b49a83039c9579c854b634306d8825efc"},"0925-construct-binary-tree-from-preorder-and-postorder-traversal":{"0925-construct-binary-tree-from-preorder-and-postorder-traversal.cpp":"8125358af40c7a902cf6695bbe0ac19d5b14f810","README.md":"be31bf390a70467103dd25c4054df5dcb6e1bfb3","difficulty":"medium"},"stats.json":{"":"2646ae51d4a8747ff04c2e72800b1a62fbca5938"}},"solved":2}}